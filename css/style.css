* {
    box-sizing: border-box;   /*width가 100px일때 100안에 padding과 border가 포함된 전체크기 , 계산하기 더 쉽고 레이아웃 잡기 편함*/
}                             /*border: 요소를 감싸는 테두리, padding은 요소 내부의 여백, 콘텐츠과 border사이의 여백*/


body {
    margin: 0 auto;        /*margin: 0 auto;는 위아래는 0, 좌우는 auto로 설정하여 가운데 정렬*/
    color: #3f464d;
    font-family: "Spoqa Han Sans", sans-serif;  /*글꼴 지정*/

}

a { /*모든 a태그에 적용*/
    all:unset;  /*a태그의 기본 스타일을 모두 제거*/
}

a:link {   /*a 태그중에 한번도 클릭하지 않는 경우에만 적용*/
    text-decoration: none;  /*링크에 밑줄 제거*/
    color: #3f464d;         /*링크 색상 지정*/ 
}

a:visited {  /*a 태그중에 방문한 경우에만 적용*/
    text-decoration: none;
    color: #3f464d;
}

a:active {  /*a 태그중에 링크를 클리하는 순간의 상태*/
    text-decoration: none;
    color: #3f464d;
}

a:hover {  /*a 태그에 마우스를 올렸을 때의 상태*/
    text-decoration: none;
    color: #3f464d;
}

.inner {    /*inner라는 클래스에 적용*/
    width: 100%;
    height: 100%;
    margin: 0 auto;  /*화면에 계속 가운데 정렬*/
}

header {
    width: 100%;
    height: 60px;
    background-color: #fff; /*배경색 지정, ffffff를 fff로 줄일 수 있음*/
    position: fixed;    /*고정된 위치에 요소를 배치, 스크롤해도 고정된 위치에 있음*/
    top: 0;
    left: 0;        /* 헤더를 브라우저 창의 최상단 좌측 모서리에 고정시키기 위함, 스크롤해도 헤더가 항상 화면 최산단에 붙어있게 된다.*/
    z-index: 1000;  /*z-index: 요소의 쌓임 순서를 지정, 숫자가 클수록 위에 쌓임*/
}

.head-container {
    width: 100%;
    height: 100%;
    display: flex; /*head-container(부모끼리)는 수직이지만 head-container안에 있는 요소(div)들은 수평으로 배치*/ 
    justify-content: space-between; /*수평으로 배치하고 양쪽 끝에 배치*/
    align-items: center; /*수직으로 가운데 정렬*/
}

.head-container .head-brand{ /*그냥 .head-brand만 써도 되지만 .head-container안에 있다는걸 보여주기 위해서 이렇게 쓴거고, head-container 클래스 안에 있는 head-brand 클래스에 적용*/
    font-size: 1.2rem; /*글자 크기*/
    font-weight: bold; /*글자 굵기*/

}

.head-container .head-brand a:hover{ /*head-container 클래스 안에 있는 head-brand 클래스 안에 있는 a태그에 마우스를 올렸을 때 적용*/
    color: #2186c4;
    cursor: pointer;
}

.head-container .head-blog {
    font-size: 1.2rem;
    font-weight: bold;
}

.head-container .head-blog a:hover {/*head-container 클래스 안에 있는 head-blog 클래스 안에 있는 a태그에 마우스를 올렸을 때 적용*/
    color: #2186c4;
    cursor: pointer;
}

section {
    width: 100%;
    background-color: #fff;
    position: relative; /*position: relative;는 요소를 일반적인 문서 흐름에 따라 배치하고, top, right, bottom, left 속성을 사용하여 원래 위치에서 조정할 수 있음*/
                        /*position: absolute는 가장 가까운 position: relative를 가진 부모를 기준으로 위치가 결정됩니다. relative 부모가 없다면 viewport(브라우저 창)가 기준이 됩니다.*/
}
.main {
    height: 360px;
    background-image: url("https: //www.fun-coding.org/assets_lms/images/photodune-4161018-group-of-students-m.jpg");
    z-index: 1; /*z-index: 요소의 쌓임 순서를 지정, 숫자가 클수록 위에 쌓임*/
}

.main-container{
    height: 100%;
    width: 100%;
    background-color: rgb(47, 48, 89);
    opacity: 0.8; /*투명도 지정, 0.8은 80%의 투명도를 가짐*/
    z-index: 2; /*z-index: 요소의 쌓임 순서를 지정, 숫자가 클수록 위에 쌓임, .main보다 위에 쌓이게하려는것*/
}

@media only screen and (min-width: 1200px) { /* only screen: 화면 장치에만 적용, 화면 너비가 1200px이상일때 아래 조건을 적용한다., 반응형 웹디자인을 위한 미디어 쿼리*/
    .inner{
        max-width: 1200px;  /*즉 최소 1200이상일때 최대 너비 1200px로 설정*/
    }
}
