* {
    box-sizing: border-box;   /*width가 100px일때 100안에 padding과 border가 포함된 전체크기 , 계산하기 더 쉽고 레이아웃 잡기 편함*/
}                             /*border: 요소를 감싸는 테두리, padding은 요소 내부의 여백, 콘텐츠과 border사이의 여백*/


body {
    margin: 0 auto;        /*margin: 0 auto;는 위아래는 0, 좌우는 auto로 설정하여 가운데 정렬*/
    color: #3f464d;
    font-family: "Spoqa Han Sans", sans-serif;  /*글꼴 지정*/

}

a { /*모든 a태그에 적용*/
    all:unset;  /*a태그의 기본 스타일을 모두 제거*/
}

a:link {   /*a 태그중에 한번도 클릭하지 않는 경우에만 적용*/
    text-decoration: none;  /*링크에 밑줄 제거*/
    color: #3f464d;         /*링크 색상 지정*/ 
}

a:visited {  /*a 태그중에 방문한 경우에만 적용*/
    text-decoration: none;
    color: #3f464d;
}

a:active {  /*a 태그중에 링크를 클리하는 순간의 상태*/
    text-decoration: none;
    color: #3f464d;
}

a:hover {  /*a 태그에 마우스를 올렸을 때의 상태*/
    text-decoration: none;
    color: #3f464d;
}

.inner {    /*inner라는 클래스에 적용*/
    width: 100%;
    height: 100%;
    margin: 0 auto;  /*화면에 계속 가운데 정렬*/
    padding: 0 2rem; /* 내용물과 테두리 사이에 0은 상하 여백 없음, 2rem은 좌우에 여백 32px 적용 (1rem = 16px) */
    overflow: hidden; /*세번째 section 같은 경우 inner 밖으로 넘어가기 때문에 */
                      /* 요소의 내용이 요소의 크기를 넘어갈 때(overflow) 넘어가는 부분을 숨긴다*/
}

header {
    width: 100%;
    height: 60px;
    background-color: #fff; /*배경색 지정, ffffff를 fff로 줄일 수 있음*/
    position: fixed;    /*고정된 위치에 요소를 배치, 스크롤해도 고정된 위치에 있음*/
    top: 0;
    left: 0;        /* 헤더를 브라우저 창의 최상단 좌측 모서리에 고정시키기 위함, 스크롤해도 헤더가 항상 화면 최산단에 붙어있게 된다.*/
    z-index: 1000;  /*z-index: 요소의 쌓임 순서를 지정, 숫자가 클수록 위에 쌓임*/
}

.head-container {
    width: 100%;
    height: 100%;
    display: flex; /*head-container(부모끼리)는 수직이지만 head-container안에 있는 요소(div)들은 수평으로 배치*/ 
    justify-content: space-between; /*수평으로 배치하고 양쪽 끝에 배치*/
    align-items: center; /*수직으로 가운데 정렬*/
}

.head-container .head-brand{ /*그냥 .head-brand만 써도 되지만 .head-container안에 있다는걸 보여주기 위해서 이렇게 쓴거고, head-container 클래스 안에 있는 head-brand 클래스에 적용*/
    font-size: 1.2rem; /*글자 크기*/
    font-weight: bold; /*글자 굵기*/

}

.head-container .head-brand a:hover{ /*head-container 클래스 안에 있는 head-brand 클래스 안에 있는 a태그에 마우스를 올렸을 때 적용*/
    color: #2186c4;
    cursor: pointer;
}

.head-container .head-blog {
    font-size: 1.2rem;
    font-weight: bold;
}

.head-container .head-blog a:hover {/*head-container 클래스 안에 있는 head-blog 클래스 안에 있는 a태그에 마우스를 올렸을 때 적용*/
    color: #2186c4;
    cursor: pointer;
}

section {
    width: 100%;  /* 부모(body) 요소의 너비가 기준인데  body는 기본적으로 viewport너비만큼 차지하고 viewport는 브라우저에서 실제보이는 화면 영역이다. meta에 설정있음*/
    background-color: #fff;
    position: relative; /*position: relative;는 요소를 일반적인 문서 흐름에 따라 배치하고, top, right, bottom, left 속성을 사용하여 원래 위치에서 조정할 수 있음*/
                        /*position: absolute는 가장 가까운 position: relative를 가진 부모를 기준으로 위치가 결정됩니다. relative 부모가 없다면 viewport(브라우저 창)가 기준이 됩니다.*/
}
.main {
    height: 360px;
    background-image: url("../img/study.jpg");
    z-index: 1; /*z-index: 요소의 쌓임 순서를 지정, 숫자가 클수록 위에 쌓임*/
    background-size: cover; /*요소를 완전히 덮음*/
    background-position: center;
    
}

.main-container{
    height: 100%;
    width: 100%;
    background-color: rgb(47, 48, 89);
    opacity: 0.8; /*투명도 지정, 0.8은 80%의 투명도를 가짐*/
    z-index: 2; /*z-index: 요소의 쌓임 순서를 지정, 숫자가 클수록 위에 쌓임, .main보다 위에 쌓이게하려는것*/
    margin-top: 60px; /* main-container부터 시작점으로 하려면 header class의 높이(60)만큼 margin 위의 크기를 60으로 주면 시작점을 main-container부터 할수 있다.*/
}

.title-container {
    padding-top: 100px;        /*main-container에 margin-top을 줬기때문에 main=main-container를 시작점으로 위에 100만큼 공백생김*/
    padding-bottom: 100px;     /*아래 공백*/
}

.title {
    font-size: 2rem;
    font-weight: bold;
    color:#fff;
    margin-bottom: 0.8rem;  /*요소의 외부 여백, 다른 요소와의 간격 조절*/
    /*padding-bottom: 0.8 rem; 요소의 내부 여백, 내용물과 테두리 사이 간격 조절*/
}

.message{
    color:#fff;
    font-size: 1.4rem;
    font-weight: normal;
    line-height: 2rem; 
}

.skill-container{
    width: 100%;   /*각 요소의 100%는 자신을 감싸고 있는 바로 위 부모 요소의 너비가 기준*/
    height: 100%; 
    display: flex; /*컨테이너를 유연한 박스로 만듦*/
    justify-content: space-around; /*수평 축에서 아이템들을 균등 간격으로 배치*/
    align-items: center; /*수직 축에서 아이템들을 가운데 정렬*/
    padding: 1rem 0;
}

.skill{
    width: 25%;
    background-color: #fff;
    display: flex; 
    align-items: center;
    border-radius: 9px;  /*요소의 모서리를 9픽셀 반경으로 둥글게 만듭니다.*/
    padding: 0.5rem 1rem; /*상하 0.5 , 좌우 1rem*/
    margin: 0 1rem; /*상하는 없어도되고 좌우만 1rem*/
    box-shadow: 10px 10px 10px -5px rgba(25, 42, 70, 0.2); /* 4개의 각 상자들에 그림자 효과 추가*/
    transition: 0.4s;  /*변화시간*/
}

.skill:hover{          /*skill클래스에 마우스를 올릴 경우 */
    transform: translate(0, -5px); /*translate는 이동함수 x축은 0, y축은 -5px만큼이동*/
}

.skill-icon{
    font-size: 2.5rem;
    margin: 0 10px;
}

.skill-title{
    display: flex;  /*수직정렬 위함*/
    flex-direction: column;  /*플렉스 항목들을 세로로 배치*/
    align-content: center;  /*여러 줄의 플렉스 라인들을 정렬*/
    /* align-items: 한 줄 안에서 플렉스 항목들을 정렬 */
}

.skill-name{
    font-weight: bold;
    color: #545e6f;
    margin-bottom: 0.2rem;
}

.skill-usage{
    font-size: 0.9rem;
    color: #545e6f;
}

.python-style{
    color: #2186c4;
}
.analysis-style{
    color: #ff8066;
}
.ai-style{
    color: #f7df1e;
}
.vue-style{
    color: #2e7d32;
}

.roadmap-container{
    width: 100%;
    margin-top: 2rem;
}

.roadmap-title-container{
    width: 100%;
    display: flex;
    justify-content: space-between;  /*양쪽 끝에 위치하게 함*/
    align-items: center;
}

.roadmap-title{
    font-size: 1.3rem;
    font-weight: bold;
    color: #545e6f;
}

.slide-prev{
    font-size: 2rem;
    cursor: pointer;  /*커서가 올라올때 포인터모양으로 변경*/
    color: rgb(47, 48, 89)
}

.slide-next{
    font-size: 2rem;
    cursor: pointer;
    color: rgb(47, 48, 89)
}

.arrow-container{
    display: flex;
}

.class-list{
    display: flex;
    list-style: none; /* ul의 요소는 각 항목앞에 점이 있는데 그 점을  없애기위함,근데 padding과 margin이 같이 삭제는 안된다.*/
    padding: 1rem 0; /*위아래  좌우*/
    margin: 0;
    overflow: hidden; /*UL 태그밖으로 넘어간것도 숨김*/
}

.class-card{
    max-width: 240px; /*반응형으로 이 카드크기가 변경되면 별로라서 이 사이즈만큼 넘치지 않는다.*/
    box-shadow: 10px 10px 10px -5px rgba(25, 42, 70, 0.2); /* 4개의 각 상자들에 그림자 효과 추가*/
    border-radius: 8px;
    margin: 0 10px; /* 카드들 서로 요소의 외부 여백, padding: 요소의 안쪽 여백*/
    transition: 0.4s;
    flex-shrink: 0; /*컨테이너가 작아질 때 해당 아이템은 크기가 줄어들지 않음, 원래 크기 유지*/
}

.class-card:hover{
    box-shadow: 10px 10px 10px 0px rgba(25, 42, 70, 0.2); /*그림자만 조금더 진해짐*/
    transform: translate(0, -5px);
}

.class-image{
    max-width: 240px;
    border-radius: 8px 8px 0 0; /*top-left| top-right | bottom-right | bottom-left - 방향은 시계방향이다, 위쪽만 라운드지게하는것*/
}

.class-container {
    width: 100%;
    padding: 0.5rem 1rem 1rem 1rem; /*이미지와 거리두려고 위쪽만 살짝벌어짐*/
}

.class-skill{
    display: flex;
    justify-content: space-between;
    /*align-content: center; /*여러 줄*/
    align-items: center; /*한줄 수평*/
}

.class-type{
    font-size: 0.9rem;
    color: #949393;
}

.class-format{
    font-size: 0.9rem;
    color: #fff;
    background-color: #0d47a1;
    padding: 0.2rem;

}


.class-desc{
    width: 100%;
    margin-top: 1rem;
}

.class-title{
    font-weight: bold;
    color: #545e6f;
    width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis; /*텍스스 잘릴 경우 (...)로 표시, widht, white-space, overflow 가 먼저 설정되어있어야한다.*/
    margin-bottom: 0.5rem;
}

.class-detail{
    font-size: 0.9;
    color: #545e6f;
    line-height: 1.5rem;
}

.roadmap-desc{
    display: inline; /*특정 사이즈일때 */
}

li a:hover{        /*li다음 a 태그가 있는 것만 cursor 추가*/
    cursor: pointer;
}

footer {
    border-top: 1px solid green; /*  선이 하나 있음 */
    background-color: #f8f9fa;
    padding: 1rem 0 ;
    margin: 1rem 0 ;
}

.footer-message {
    color: #545e6f;
    font-weight: bold;
    margin: 0.3rem 0.5rem ;
}

.footer-contact {
    color: #545e6f;
    margin: 0rem 0.5rem ;
}

.footer-copyright {
    color: #545e6f;
    font-size: 0.9rem;
    margin: 1rem 0.5rem ;
}

#backtotop { /*id는 샵, 클래스는 . 이다 그리고 transition-property 적용하여 기본상태이다*/
    /*transition-property에사 색요소를 넣어서 추가했지만*/
    /* background-color를 설정하지 않으면 */
    /* 자동으로 background-color: transparent; 가 적용됨 그래서 색요소 지워도 제대로 동작한다, 왜냐하면 변화하기 전의 색이기 때문 */
    /* 정작 보일때만 색이 필요하기 때문*/
    background-color: rgb(47, 48, 89);
    width: 40px;
    height: 40px;
    text-align: center;

    border-radius: 20px; /*width와 height의 반값을 하면 원이된다.*/
    position: fixed;  /*고정, 고정하면 위치가 필요*/
    bottom: 30px;
    right: 30px;
    transition-property: background-color, opacity, visibility;  /* 3개의 속성(배경색, 투명도, 가시성)에 트랜지션 효과를 적용 */
    transition-duration: 0.3s, 0.5s, 0.5s; /*지속시간*/
    transition: 0.4s; /* hover되면 동작할 시간*/
    opacity: 0;  /* 완전 투명 상태 (0: 투명 ~ 1: 불투명) */
    visibility: hidden; /* 요소를 화면에서 완전히 숨김 (display: none과 비슷하지만 트랜지션 가능) */
    z-index: 999; /* 다른 요소들보다 위에 표시되도록 설정 (숫자가 클수록 위에 표시) */

}

#backtotop::after {  /*화살표 아이콘 추가*/
    content: "\f077";           /* FontAwesome의 위쪽 화살표 아이콘 유니코드 */
    font-family: FontAwesome;   /* FontAwesome 아이콘 폰트 사용 */
    font-size: 1.5rem;         /* 아이콘 크기 */
    line-height: 40px;         /* 세로 중앙 정렬을 위한 줄 높이 */
    color: #fff;               /* 아이콘 색상을 흰색으로 */
}

#backtotop.show:hover{  /*마우스를 올렸을때만 동작하는 행동*/
    cursor: pointer;
    background-color: #2186c4;
    transform: translate(0, -5px); /*커서 올라오면 아이콘이 위로 조금 올라옴*/
}

#backtotop.show {  /* "버튼을 보이게 하는 상태"이다, backtotop id와 show라는 클래스를 둘다 가지고 있는것만 transition-property 활성화*/
    opacity: 1;
    visibility: visible;
    background-color: rgb(47, 48, 89);
}


@media only screen and (min-width: 1200px) { /* only screen: 화면 장치에만 적용, 화면 너비가 1200px이상일때 아래 조건을 적용한다., 반응형 웹디자인을 위한 미디어 쿼리*/
    .inner{
        max-width: 1200px;  /*즉 최소 1200이상일때 최대 너비 1200px로 설정*/
    }
}
@media only screen and (max-width: 980px) { /*화면 너비가 980px 이하일 때 .skill-container 클래스를 가진 요소를 숨기는 미디어 쿼리입니다. 모바일 화면에서 요소를 숨기는 반응형 디자인 코드입니다.*/
    .skill-container{
        display: none;
    }
    .roadmap-desc{
        display: none;
    }
}
